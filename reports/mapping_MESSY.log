Traceback (most recent call last):
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/nicolekeeney/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Set desired date range 
winter18_19 = pd.date_range(start="2018-11-01", end="2019-04-01", freq="MS")
winter19_20 = pd.date_range(start="2019-09-01", end="2020-04-01", freq="MS")
winter20_21 = pd.date_range(start="2020-09-01", end="2021-04-01", freq="MS") 
winter_months = winter18_19.append(winter19_20).append(winter20_21)

# Read book data 
book_ds = read_book_data()
book_ds = book_ds.sel(time = winter_months) # Get winter months

# Read ICESat-2 data 
is2_ds = read_is2_data() 
is2_ds = is2_ds.sel(time = winter_months) # Get winter months

# Decide whether or not to interpolate the ICESat-2 data or use the raw product, which has some holes in the data
interpolate = True
if (interpolate == True): 
    print("Interpolating ICESat-2 data...")
    cdr_da = book_ds["cdr_seaice_conc_monthly"] # Get CDR data
    is2_ds = is2_interp2d(is2_ds, cdr_da, method='nearest', interp_var='all')
    print("Complete!")
    
# Combine datasets 
ds = xr.merge([is2_ds, book_ds])
ds = ds.drop_vars("projection")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mMergeError[0m                                Traceback (most recent call last)
[0;32m/var/folders/8v/cr06mz0n3bjd5jr12_9v6n200000gn/T/ipykernel_82359/4236713622.py[0m in [0;36m<module>[0;34m[0m
[1;32m     22[0m [0;34m[0m[0m
[1;32m     23[0m [0;31m# Combine datasets[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 24[0;31m [0mds[0m [0;34m=[0m [0mxr[0m[0;34m.[0m[0mmerge[0m[0;34m([0m[0;34m[[0m[0mis2_ds[0m[0;34m,[0m [0mbook_ds[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     25[0m [0mds[0m [0;34m=[0m [0mds[0m[0;34m.[0m[0mdrop_vars[0m[0;34m([0m[0;34m"projection"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/xarray/core/merge.py[0m in [0;36mmerge[0;34m(objects, compat, join, fill_value, combine_attrs)[0m
[1;32m    898[0m         [0mdict_like_objects[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mobj[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    899[0m [0;34m[0m[0m
[0;32m--> 900[0;31m     merge_result = merge_core(
[0m[1;32m    901[0m         [0mdict_like_objects[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    902[0m         [0mcompat[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/xarray/core/merge.py[0m in [0;36mmerge_core[0;34m(objects, compat, join, combine_attrs, priority_arg, explicit_coords, indexes, fill_value)[0m
[1;32m    633[0m [0;34m[0m[0m
[1;32m    634[0m     [0mprioritized[0m [0;34m=[0m [0m_get_priority_vars_and_indexes[0m[0;34m([0m[0maligned[0m[0;34m,[0m [0mpriority_arg[0m[0;34m,[0m [0mcompat[0m[0;34m=[0m[0mcompat[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 635[0;31m     variables, out_indexes = merge_collected(
[0m[1;32m    636[0m         [0mcollected[0m[0;34m,[0m [0mprioritized[0m[0;34m,[0m [0mcompat[0m[0;34m=[0m[0mcompat[0m[0;34m,[0m [0mcombine_attrs[0m[0;34m=[0m[0mcombine_attrs[0m[0;34m[0m[0;34m[0m[0m
[1;32m    637[0m     )

[0;32m~/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/xarray/core/merge.py[0m in [0;36mmerge_collected[0;34m(grouped, prioritized, compat, combine_attrs)[0m
[1;32m    238[0m                 [0mvariables[0m [0;34m=[0m [0;34m[[0m[0mvariable[0m [0;32mfor[0m [0mvariable[0m[0;34m,[0m [0m_[0m [0;32min[0m [0melements_list[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    239[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 240[0;31m                     [0mmerged_vars[0m[0;34m[[0m[0mname[0m[0;34m][0m [0;34m=[0m [0munique_variable[0m[0;34m([0m[0mname[0m[0;34m,[0m [0mvariables[0m[0;34m,[0m [0mcompat[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    241[0m                 [0;32mexcept[0m [0mMergeError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    242[0m                     [0;32mif[0m [0mcompat[0m [0;34m!=[0m [0;34m"minimal"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/icesat2_book/lib/python3.8/site-packages/xarray/core/merge.py[0m in [0;36munique_variable[0;34m(name, variables, compat, equals)[0m
[1;32m    147[0m [0;34m[0m[0m
[1;32m    148[0m     [0;32mif[0m [0;32mnot[0m [0mequals[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 149[0;31m         raise MergeError(
[0m[1;32m    150[0m             [0;34mf"conflicting values for variable {name!r} on objects to be combined. "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    151[0m             [0;34m"You can skip this check by specifying compat='override'."[0m[0;34m[0m[0;34m[0m[0m

[0;31mMergeError[0m: conflicting values for variable 'ice_thickness_smoothed' on objects to be combined. You can skip this check by specifying compat='override'.
MergeError: conflicting values for variable 'ice_thickness_smoothed' on objects to be combined. You can skip this check by specifying compat='override'.

